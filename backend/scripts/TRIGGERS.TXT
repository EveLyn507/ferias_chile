DROP FUNCTION IF EXISTS insert_detalle_programa_trigger CASCADE;

CREATE OR REPLACE FUNCTION insert_detalle_programa_trigger()
RETURNS TRIGGER AS $$
BEGIN
    -- Insertar los detalles del programa para cada día de la semana con id_dia_armado = 1
    INSERT INTO detalle_programa_feria (
        id_feria, id_dia, hora_inicio, hora_termino, 
        id_dia_armado, hora_inicio_armado, hora_termino_armado, activo
    )
    VALUES 
        (NEW.id_feria, 1, '00:00', '00:00', 1, '00:00', '00:00', false),
        (NEW.id_feria, 2, '00:00', '00:00', 1, '00:00', '00:00', false),
        (NEW.id_feria, 3, '00:00', '00:00', 1, '00:00', '00:00', false),
        (NEW.id_feria, 4, '00:00', '00:00', 1, '00:00', '00:00', false),
        (NEW.id_feria, 5, '00:00', '00:00', 1, '00:00', '00:00', false),
        (NEW.id_feria, 6, '00:00', '00:00', 1, '00:00', '00:00', false),
        (NEW.id_feria, 7, '00:00', '00:00', 1, '00:00', '00:00', false);

    -- Insertar una nueva entrada en la tabla plano con valores predeterminados para width y height
    INSERT INTO plano (id_feria, width, height)
    VALUES (NEW.id_feria, 500, 500);  -- Puedes ajustar los valores de width y height según sea necesario

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Creación del trigger en la tabla feria
CREATE TRIGGER after_feria_insert
AFTER INSERT ON feria
FOR EACH ROW
EXECUTE FUNCTION insert_detalle_programa_trigger();
